<modification>
    <name>iSellSoft RelatedLite-1.0</name>
    <code>iSellSoft-RelatedLite-1.0</code>
    <version>1.0</version>
    <author>iSellSoft Team</author>
    <file path="catalog/model/catalog/product.php">
	<operation error="skip"> 
	    <search><![CDATA[public function getProductRelated($product_id) {]]></search>
	    <add offset="0" position="after"><![CDATA[
				$product_data = array();

				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_related pr LEFT JOIN " . DB_PREFIX . "product p ON (pr.related_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pr.product_id = '" . (int)$product_id . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

				foreach ($query->rows as $result) {
					$product_data[$result['related_id']] = $this->getProduct($result['related_id']);
				}
                if( !count($product_data) ){
                    $product = $this->db->query("SELECT name AS name FROM " . DB_PREFIX . "product_description WHERE product_id = '" . (int)$product_id . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'")->row;

                    $search_query=[
                    'filter_name'=>$product['name'],
                    'start'=>0,
                    'limit'=>5,
                    'sort'=>''
                    ];
                    $matches=$this->getProducts($search_query);
                    foreach($matches as $match){
                        if( $match['product_id']==$product_id ){
                            continue;
                        }
                        $product_data[]=$match;
                    }
                }
				return $product_data;
        ]]></add>
	</operation>
    </file>
</modification>
